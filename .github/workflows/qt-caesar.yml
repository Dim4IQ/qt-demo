name: Caesar

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  code_quality:
    name: Code quality
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    - name: Install rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt

    - name: Install latest just release
      uses: taiki-e/install-action@just

    - name: Ensure `fmt` has been run
      run:  just fmt-check

    - name: Install Qt
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends --allow-unauthenticated \
          qt6-base-dev                                                          \
          qt6-declarative-dev

    - name: Run clippy
      run: just lint
      
  build:
    name: Build for ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { build: linux-gnu,  os: ubuntu-22.04, target: x86_64-unknown-linux-gnu }

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}
    - name: Install Qt
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends --allow-unauthenticated \
          qt6-base-dev                                                          \
          qt6-declarative-dev

    - name: Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.os }}-${{ matrix.target }}

    - name: Build
      run: cargo build --release --locked --target ${{ matrix.target }}
